import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# ==============================================
# 1) Configura√ß√£o da P√°gina
# ==============================================
st.set_page_config(
    page_title="Dashboard Vale do Itaja√≠ (SC)",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# ==============================================
# 2) Fun√ß√£o para Carregar e Preparar os Dados
# ==============================================
@st.cache_data
def load_data():
    """
    Carrega, valida e prepara os dados do arquivo Excel.
    A anota√ß√£o @st.cache_data garante que os dados sejam carregados apenas uma vez.
    """
    try:
        df = pd.read_excel("municipios_2025_atualizado.xlsx")
    except FileNotFoundError:
        st.error("Erro: O arquivo 'municipios_2025_atualizado.xlsx' n√£o foi encontrado. Por favor, coloque-o no mesmo diret√≥rio do seu script.")
        st.stop()

    # Valida√ß√£o de colunas essenciais
    colunas_esperadas = [
        "Municipio", "cod_IBGE", "IDH-M_2010", "Populacao_2010", "Densidade_2010",
        "Populacao_2022", "Densidade_2022", "PIBcapita_2019", "PIBcapita_2021",
        "Crescimento_populacional_abs", "Crescimento_populacional_pct",
        "Crescimento_PIBcapita_abs", "Crescimento_PIBcapita_pct"
    ]
    colunas_faltando = [c for c in colunas_esperadas if c not in df.columns]
    if colunas_faltando:
        st.error(f"Erro de Valida√ß√£o: As seguintes colunas obrigat√≥rias n√£o foram encontradas no arquivo Excel: {colunas_faltando}. Por favor, verifique os cabe√ßalhos.")
        st.stop()

    # Convers√£o segura para tipos num√©ricos
    for col in colunas_esperadas:
        if col not in ["Municipio", "cod_IBGE"]:
            df[col] = pd.to_numeric(df[col], errors='coerce')

    # Remove linhas onde dados essenciais s√£o nulos
    df = df.dropna(subset=["Municipio", "Populacao_2022", "PIBcapita_2021", "IDH-M_2010"])
    
    # Ordena o DataFrame por munic√≠pio
    df = df.sort_values("Municipio").reset_index(drop=True)
    return df

# Carrega os dados e trata poss√≠veis erros
df = load_data()

# ==============================================
# 3) Barra Lateral com Informa√ß√µes (Sidebar)
# ==============================================
with st.sidebar:
    st.header("Sobre o App")
    st.info(
        """
        **Dados:** An√°lise multianual de indicadores municipais do Vale do Itaja√≠ (SC).  
        **Fonte:** IBGE (2025)  
        **Desenvolvimento:** App criado com Streamlit e Plotly.  
        
        *Ci√™ncia de Dados 2025 - Prof. Maiko Spiess*
        """
    )

# ==============================================
# 4) T√≠tulo Principal e Introdu√ß√£o
# ==============================================
st.title("üìä Dashboard Interativo: Vale do Itaja√≠ (SC)")
st.markdown(
    """
    Explore indicadores demogr√°ficos e econ√¥micos dos munic√≠pios do Vale do Itaja√≠. 
    Use as abas abaixo para navegar entre as diferentes an√°lises.
    """
)

# ==============================================
# 5) M√©tricas de Destaque (KPIs)
# ==============================================
st.markdown("### Indicadores Gerais do Vale do Itaja√≠ (2022)")

# Calcula as m√©tricas
total_municipios = df["Municipio"].nunique()
populacao_total_2022 = df["Populacao_2022"].sum()
pib_medio_2021 = df["PIBcapita_2021"].mean()
idh_medio_2010 = df["IDH-M_2010"].mean()

# Exibe as m√©tricas em colunas
col1, col2, col3, col4 = st.columns(4)
with col1:
    st.metric(label="N¬∫ de Munic√≠pios", value=f"{total_municipios}")
with col2:
    st.metric(label="Popula√ß√£o Total", value=f"{populacao_total_2022:,.0f}".replace(",", "."))
with col3:
    st.metric(label="PIB per capita M√©dio (2021)", value=f"R$ {pib_medio_2021:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."))
with col4:
    st.metric(label="IDH-M M√©dio (2010)", value=f"{idh_medio_2010:.3f}")

st.markdown("<br>", unsafe_allow_html=True)

# ==============================================
# 6) Fun√ß√µes de Plotagem (T√≠tulos Atualizados)
# ==============================================
def plot_top10_combined(df):
    """Gera gr√°ficos de barras para Top 10 Popula√ß√£o e Densidade."""
    top10_pop = df.nlargest(10, "Populacao_2022").sort_values("Populacao_2022", ascending=True)
    top10_den = df.nlargest(10, "Densidade_2022").sort_values("Densidade_2022", ascending=True)
    
    fig = make_subplots(
        rows=1, cols=2,
        subplot_titles=(
            "<b>Top 10 Popula√ß√£o (2022)</b>", 
            "<b>Top 10 Densidade (2022)</b>"
        ),
        horizontal_spacing=0.15
    )
    
    fig.add_trace(go.Bar(
        x=top10_pop["Populacao_2022"], y=top10_pop["Municipio"], orientation="h",
        name="Popula√ß√£o", marker_color="#1f77b4",
        hovertemplate="<b>%{y}</b><br>Popula√ß√£o: %{x:,}<extra></extra>"
    ), row=1, col=1)
    
    fig.add_trace(go.Bar(
        x=top10_den["Densidade_2022"], y=top10_den["Municipio"], orientation="h",
        name="Densidade", marker_color="#ff7f0e",
        hovertemplate="<b>%{y}</b><br>Densidade: %{x:,.2f} hab/km¬≤<extra></extra>"
    ), row=1, col=2)
    
    fig.update_layout(
        template="plotly_white", showlegend=False, height=500,
        margin=dict(l=120, r=20, t=50, b=40), font=dict(family="sans-serif")
    )
    fig.update_xaxes(title_text="Habitantes")
    fig.update_yaxes(showticklabels=True)
    return fig

def plot_hist_pib2021(df):
    """Gera o histograma da distribui√ß√£o do PIB per capita 2021."""
    fig = px.histogram(
        df, x="PIBcapita_2021", nbins=40,
        labels={"PIBcapita_2021": "PIB per capita (R$) ‚Äì 2021"},
        opacity=0.8, color_discrete_sequence=["#1f77b4"]
    )
    fig.update_layout(
        template="plotly_white", height=500,
        title_text="<b>Distribui√ß√£o do PIB per capita - Vale do Itaja√≠ (2021)</b>",
        yaxis_title="N√∫mero de Munic√≠pios", bargap=0.1, font=dict(family="sans-serif")
    )
    return fig

def plot_scatter_idh_vs_pib21(df):
    """Gera o gr√°fico de dispers√£o IDH vs. PIB."""
    fig = px.scatter(
        df, x="PIBcapita_2021", y="IDH-M_2010",
        size="Populacao_2022", color="Crescimento_populacional_pct",
        color_continuous_scale=px.colors.sequential.Viridis,
        hover_name="Municipio",
        labels={
            "PIBcapita_2021": "PIB per capita (R$) ‚Äì 2021",
            "IDH-M_2010": "IDH-M (2010)",
            "Populacao_2022": "Popula√ß√£o (2022)",
            "Crescimento_populacional_pct": "Cresc. Pop. (%)"
        },
        size_max=50, opacity=0.7
    )

    fig.update_layout(
        template="plotly_white", height=600,
        title_text="<b>IDH (2010) vs. PIB per capita (2021) - Vale do Itaja√≠</b>",
        font=dict(family="sans-serif")
    )
    return fig

# ==============================================
# 7) Conte√∫do Principal com Abas (Tabs)
# ==============================================
tab1, tab2, tab3, tab4 = st.tabs([
    "üìç Vis√£o Geral",
    "üí∞ An√°lise de Renda",
    "üßë‚Äçü§ù‚Äçüßë IDH vs. Renda",
    "üìÑ Explorar Dados"
])

with tab1:
    st.header("Top 10 Munic√≠pios do Vale do Itaja√≠ por Popula√ß√£o e Densidade")
    fig_combined = plot_top10_combined(df)
    st.plotly_chart(fig_combined, use_container_width=True)

with tab2:
    st.header("An√°lise de Renda dos Munic√≠pios do Vale do Itaja√≠")
    fig_hist = plot_hist_pib2021(df)
    st.plotly_chart(fig_hist, use_container_width=True)

with tab3:
    st.header("An√°lise Cruzada: IDH, Renda e Popula√ß√£o no Vale do Itaja√≠")
    fig_scatter = plot_scatter_idh_vs_pib21(df)
    st.plotly_chart(fig_scatter, use_container_width=True)

with tab4:
    st.header("Explore os Dados Completos do Vale do Itaja√≠")
    st.markdown("Use os cabe√ßalhos das colunas para ordenar os dados. O campo de busca permite filtrar por qualquer valor na tabela.")
    st.dataframe(df, use_container_width=True, height=600)

# ==============================================
# 8) Rodap√©
# ==============================================
st.markdown("---")
st.write("Dashboard desenvolvido como um exemplo de refatora√ß√£o de app Streamlit com foco em design e interatividade.")
